spring.application.name=PoornaAdminBackend

# ===============================
# =  MYSQL DATABASE CONNECTION  =
# ===============================

spring.datasource.url=jdbc:mysql://localhost:3306/poornaoils?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=poojabs

#SSL (Secure Sockets Layer) is a security protocol that encrypts data between your application and the database, protecting it from man-in-the-middle attacks.
#useSSL=true: Encrypts data during transmission (safer, especially for production).
#useSSL=false: Disables encryption (fine for local development to avoid warnings).

#Java and MySQL can have different timezones, which may cause errors or inconsistent Date/Timestamp values.
#serverTimezone=UTC: Tells the MySQL JDBC driver to use UTC (Coordinated Universal Time).
#This prevents issues like:
#The server time zone value 'XYZ' is unrecognized or represents more than one time zone.

# ===============================
# =  JPA & HIBERNATE SETTINGS   =
# ===============================

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#What is a Hibernate Dialect?
#A Hibernate dialect is what tells Hibernate how to convert its generic SQL queries into database-specific SQL.
#Every database (MySQL, PostgreSQL, Oracle, etc.) has slightly different SQL syntax and features. The dialect bridges this difference

# What does MySQL8Dialect do?
#This line specifically says:
#"Hibernate, please use MySQL 8 specific syntax and features when generating or executing SQL queries."
#That includes:
#*Proper AUTO_INCREMENT generation.
#*Correct LIMIT and OFFSET clauses.
#*MySQL-compatible functions and data types.
#*UTF-8/character set handling suited to MySQL 8.

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
server.port=8080

# Multipart properties
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB

# Tomcat specific settings
server.tomcat.max-swallow-size=10MB
server.tomcat.max-http-form-post-size=10MB

spring.http.converters.preferred-json-mapper=jackson